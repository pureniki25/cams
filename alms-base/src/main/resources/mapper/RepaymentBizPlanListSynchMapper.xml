<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hongte.alms.base.mapper.RepaymentBizPlanListSynchMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.hongte.alms.base.entity.RepaymentBizPlanListSynch">
        <id column="plan_list_id" property="planListId" />
        <result column="plan_id" property="planId" />
        <result column="business_id" property="businessId" />
        <result column="orig_business_id" property="origBusinessId" />
        <result column="period" property="period" />
        <result column="after_id" property="afterId" />
        <result column="due_date" property="dueDate" />
        <result column="total_borrow_amount" property="totalBorrowAmount" />
        <result column="overdue_amount" property="overdueAmount" />
        <result column="overdue_days" property="overdueDays" />
        <result column="current_status" property="currentStatus" />
        <result column="current_sub_status" property="currentSubStatus" />
        <result column="repay_status" property="repayStatus" />
        <result column="repay_flag" property="repayFlag" />
        <result column="fact_repay_date" property="factRepayDate" />
        <result column="finance_comfirm_date" property="financeComfirmDate" />
        <result column="finance_confirm_user" property="financeConfirmUser" />
        <result column="finance_confirm_user_name" property="financeConfirmUserName" />
        <result column="confirm_flag" property="confirmFlag" />
        <result column="auto_withholding_confirmed_date" property="autoWithholdingConfirmedDate" />
        <result column="auto_withholding_confirmed_user" property="autoWithholdingConfirmedUser" />
        <result column="auto_withholding_confirmed_user_name" property="autoWithholdingConfirmedUserName" />
        <result column="accountant_confirm_status" property="accountantConfirmStatus" />
        <result column="accountant_confirm_user" property="accountantConfirmUser" />
        <result column="accountant_confirm_user_name" property="accountantConfirmUserName" />
        <result column="accountant_confirm_date" property="accountantConfirmDate" />
        <result column="derate_amount" property="derateAmount" />
        <result column="remark" property="remark" />
        <result column="create_time" property="createTime" />
        <result column="create_user" property="createUser" />
        <result column="update_time" property="updateTime" />
        <result column="update_user" property="updateUser" />
        <result column="src_type" property="srcType" />
        <result column="business_id_ext" property="businessIdExt" />
        <result column="district_id_ext" property="districtIdExt" />
        <result column="district_name_ext" property="districtNameExt" />
        <result column="company_id_ext" property="companyIdExt" />
        <result column="company_name_ext" property="companyNameExt" />
        <result column="operator_id_ext" property="operatorIdExt" />
        <result column="operator_name_ext" property="operatorNameExt" />
        <result column="customer_name_ext" property="customerNameExt" />
        <result column="business_type_ext" property="businessTypeExt" />
        <result column="business_type_name_ext" property="businessTypeNameExt" />
        <result column="borrow_money_ext" property="borrowMoneyExt" />
        <result column="delay_days_ext" property="delayDaysExt" />
        <result column="phone_staff_ext" property="phoneStaffExt" />
        <result column="visit_staff_ext" property="visitStaffExt" />
        <result column="status_name_ext" property="statusNameExt" />
        <result column="plan_status_ext" property="planStatusExt" />
        <result column="collection_status_ext" property="collectionStatusExt" />
        <result column="borrow_limit_ext" property="borrowLimitExt" />
        <result column="repayment_type_id_ext" property="repaymentTypeIdExt" />
        <result column="class_name_ext" property="classNameExt" />
        <result column="original_business_id_ext" property="originalBusinessIdExt" />
        <result column="phone_number_ext" property="phoneNumberExt" />
        <result column="business_ctype_ext" property="businessCtypeExt" />
        <result column="fact_amount_ext" property="factAmountExt" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        plan_list_id AS planListId, plan_id AS planId, business_id AS businessId, orig_business_id AS origBusinessId, period, after_id AS afterId, due_date AS dueDate, total_borrow_amount AS totalBorrowAmount, overdue_amount AS overdueAmount, overdue_days AS overdueDays, current_status AS currentStatus, current_sub_status AS currentSubStatus, repay_status AS repayStatus, repay_flag AS repayFlag, fact_repay_date AS factRepayDate, finance_comfirm_date AS financeComfirmDate, finance_confirm_user AS financeConfirmUser, finance_confirm_user_name AS financeConfirmUserName, confirm_flag AS confirmFlag, auto_withholding_confirmed_date AS autoWithholdingConfirmedDate, auto_withholding_confirmed_user AS autoWithholdingConfirmedUser, auto_withholding_confirmed_user_name AS autoWithholdingConfirmedUserName, accountant_confirm_status AS accountantConfirmStatus, accountant_confirm_user AS accountantConfirmUser, accountant_confirm_user_name AS accountantConfirmUserName, accountant_confirm_date AS accountantConfirmDate, derate_amount AS derateAmount, remark, create_time AS createTime, create_user AS createUser, update_time AS updateTime, update_user AS updateUser, src_type AS srcType, business_id_ext AS businessIdExt, district_id_ext AS districtIdExt, district_name_ext AS districtNameExt, company_id_ext AS companyIdExt, company_name_ext AS companyNameExt, operator_id_ext AS operatorIdExt, operator_name_ext AS operatorNameExt, customer_name_ext AS customerNameExt, business_type_ext AS businessTypeExt, business_type_name_ext AS businessTypeNameExt, borrow_money_ext AS borrowMoneyExt, delay_days_ext AS delayDaysExt, phone_staff_ext AS phoneStaffExt, visit_staff_ext AS visitStaffExt, status_name_ext AS statusNameExt, plan_status_ext AS planStatusExt, collection_status_ext AS collectionStatusExt, borrow_limit_ext AS borrowLimitExt, repayment_type_id_ext AS repaymentTypeIdExt, class_name_ext AS classNameExt, original_business_id_ext AS originalBusinessIdExt, phone_number_ext AS phoneNumberExt, business_ctype_ext AS businessCtypeExt, fact_amount_ext AS factAmountExt
    </sql>
    
    <select id="selectAddList" resultType="java.util.Map">
	  SELECT 
		t2.plan_list_id,
		t2.plan_id,
		t2.business_id,
		t2.orig_business_id,
		t2.period,
		t2.after_id,
		t2.due_date,
		t2.total_borrow_amount,
		t2.overdue_amount,
		t2.overdue_days,
		t2.current_status,
		t2.repay_flag,
		t2.fact_repay_date,
		t2.finance_comfirm_date,
		t2.finance_confirm_user,
		t2.finance_confirm_user_name,
		t2.confirm_flag,
		t2.auto_withholding_confirmed_date,
		t2.auto_withholding_confirmed_user,
		t2.auto_withholding_confirmed_user_name,
		t2.accountant_confirm_status,
		t2.accountant_confirm_user,
		t2.accountant_confirm_user_name,
		t2.accountant_confirm_date,
		t2.derate_amount,
		t2.remark,
		t2.create_time,
		t2.create_user,
		t2.update_time,
		t2.update_user,
		t2.current_sub_status,
		t2.repay_status,
		t2.src_type
	  FROM tb_repayment_biz_plan_list_synch t1 
	  RIGHT JOIN tb_repayment_biz_plan_list t2 ON t1.plan_list_id = t2.plan_list_id 
	  <where>
	  ${ew.sqlSegment}
	  </where>
   </select>
   
   <insert id="addRepaymentBizPlanListSynch">
    INSERT INTO tb_repayment_biz_plan_list_synch
		(
		plan_list_id,
		plan_id,
		business_id,
		orig_business_id,
		period,
		after_id,
		due_date,
		total_borrow_amount,
		overdue_amount,
		overdue_days,
		delay_days_ext,
		current_status,
		repay_flag,
		fact_repay_date,
		finance_comfirm_date,
		finance_confirm_user,
		finance_confirm_user_name,
		confirm_flag,
		auto_withholding_confirmed_date,
		auto_withholding_confirmed_user,
		auto_withholding_confirmed_user_name,
		accountant_confirm_status,
		accountant_confirm_user,
		accountant_confirm_user_name,
		accountant_confirm_date,
		derate_amount,
		remark,
		create_time,
		create_user,
		update_time,
		update_user,
		current_sub_status,
		repay_status,
		src_type
		)
		(SELECT 
		t2.plan_list_id,
		t2.plan_id,
		t2.business_id,
		t2.orig_business_id,
		t2.period,
		t2.after_id,
		t2.due_date,
		t2.total_borrow_amount,
		t2.overdue_amount,
		t2.overdue_days,
		(
        <![CDATA[
              case
                WHEN t2.due_date is null then 0
                WHEN t2.due_date>now() THEN 0
                WHEN t2.fact_repay_date is null then to_days(now())- to_days(t2.due_date)
                WHEN t2.fact_repay_date<t2.due_date THEN 0
                ELSE  to_days(t2.fact_repay_date)- to_days(t2.due_date)
                end
            ]]>
        ),
		t2.current_status,
		t2.repay_flag,
		t2.fact_repay_date,
		t2.finance_comfirm_date,
		t2.finance_confirm_user,
		t2.finance_confirm_user_name,
		t2.confirm_flag,
		t2.auto_withholding_confirmed_date,
		t2.auto_withholding_confirmed_user,
		t2.auto_withholding_confirmed_user_name,
		t2.accountant_confirm_status,
		t2.accountant_confirm_user,
		t2.accountant_confirm_user_name,
		t2.accountant_confirm_date,
		t2.derate_amount,
		t2.remark,
		t2.create_time,
		t2.create_user,
		t2.update_time,
		t2.update_user,
		t2.current_sub_status,
		t2.repay_status,
		t2.src_type
		 FROM tb_repayment_biz_plan_list_synch t1 
		 RIGHT JOIN tb_repayment_biz_plan_list t2 ON t1.plan_list_id = t2.plan_list_id 
		 WHERE t1.plan_list_id IS NULL LIMIT 100000
		)
  </insert> 
   
   <select id="selectdelList" resultType="java.lang.String">
	  SELECT t1.plan_list_id AS plan_list1 FROM tb_repayment_biz_plan_list_synch t1 
	  LEFT OUTER JOIN tb_repayment_biz_plan_list t2 ON t1.plan_list_id = t2.plan_list_id 
	  <where>
	  ${ew.sqlSegment}
	  </where>
   </select>
   
   <update id="updateRepaymentBizPlanList">
		UPDATE tb_repayment_biz_plan_list_synch t1,tb_repayment_biz_plan_list t2 SET 
		t1.plan_id = t2.plan_id,
		t1.business_id = t2.business_id,
		t1.orig_business_id = t2.orig_business_id,
		t1.period = t2.period,
		t1.after_id = t2.after_id,
		t1.due_date = t2.due_date,
		t1.total_borrow_amount = t2.total_borrow_amount,
		t1.overdue_amount = t2.overdue_amount,
		t1.overdue_days = t2.overdue_days,
		t1.delay_days_ext =
		(
        <![CDATA[
              case
                WHEN t2.due_date is null then 0
                WHEN t2.due_date>now() THEN 0
                WHEN t2.fact_repay_date is null then to_days(now())- to_days(t2.due_date)
                WHEN t2.fact_repay_date<t2.due_date THEN 0
                ELSE  to_days(t2.fact_repay_date)- to_days(t2.due_date)
                end
            ]]>
        ),
		t1.current_status = t2.current_status,
		t1.repay_flag = t2.repay_flag,
		t1.fact_repay_date = t2.fact_repay_date,
		t1.finance_comfirm_date = t2.finance_comfirm_date,
		t1.finance_confirm_user = t2.finance_confirm_user,
		t1.finance_confirm_user_name = t2.finance_confirm_user_name,
		t1.confirm_flag = t2.confirm_flag,
		t1.auto_withholding_confirmed_date = t2.auto_withholding_confirmed_date,
		t1.auto_withholding_confirmed_user = t2.auto_withholding_confirmed_user,
		t1.auto_withholding_confirmed_user_name = t2.auto_withholding_confirmed_user_name,
		t1.accountant_confirm_status = t2.accountant_confirm_status,
		t1.accountant_confirm_user = t2.accountant_confirm_user,
		t1.accountant_confirm_user_name = t2.accountant_confirm_user_name,
		t1.accountant_confirm_date = t2.accountant_confirm_date,
		t1.derate_amount = t2.derate_amount,
		t1.remark = t2.remark,
		t1.create_time = t2.create_time,
		t1.create_user = t2.create_user,
		t1.update_time = t2.update_time,
		t1.update_user = t2.update_user,
		t1.current_sub_status = t2.current_sub_status,
		t1.repay_status = t2.repay_status,
		t1.src_type = t2.src_type
		WHERE 
		t1.plan_list_id = t2.plan_list_id AND(
		IFNULL(t1.plan_id,0) != IFNULL(t2.plan_id,0) or
		IFNULL(t1.business_id,0) != IFNULL(t2.business_id,0) or
		IFNULL(t1.orig_business_id,0) != IFNULL(t2.orig_business_id,0) or
		IFNULL(t1.period,0) != IFNULL(t2.period,0) or
		IFNULL(t1.after_id,0) != IFNULL(t2.after_id,0) or
		IFNULL(t1.due_date,0) != IFNULL(t2.due_date,0) or
		IFNULL(t1.total_borrow_amount,0) != IFNULL(t2.total_borrow_amount,0) or
		IFNULL(t1.overdue_amount,0) != IFNULL(t2.overdue_amount,0) or
		IFNULL(t1.overdue_days,0) != IFNULL(t2.overdue_days,0) or
		IFNULL(t1.current_status,0) != IFNULL(t2.current_status,0) or
		IFNULL(t1.repay_flag,0) != IFNULL(t2.repay_flag,0) or
		IFNULL(t1.fact_repay_date,1) != IFNULL(t2.fact_repay_date,0) or
		IFNULL(t1.finance_comfirm_date,0) != IFNULL(t2.finance_comfirm_date,0) or
		IFNULL(t1.finance_confirm_user,0) != IFNULL(t2.finance_confirm_user,0) or
		IFNULL(t1.finance_confirm_user_name,0) != IFNULL(t2.finance_confirm_user_name,0) or
		IFNULL(t1.confirm_flag,0) != IFNULL(t2.confirm_flag,0) or
		IFNULL(t1.auto_withholding_confirmed_date,0) != IFNULL(t2.auto_withholding_confirmed_date,0) or
		IFNULL(t1.auto_withholding_confirmed_user,0) != IFNULL(t2.auto_withholding_confirmed_user,0) or
		IFNULL(t1.auto_withholding_confirmed_user_name,0) != IFNULL(t2.auto_withholding_confirmed_user_name,0) or
		IFNULL(t1.accountant_confirm_status,0) != IFNULL(t2.accountant_confirm_status,0) or
		IFNULL(t1.accountant_confirm_user,0) != IFNULL(t2.accountant_confirm_user,0) or
		IFNULL(t1.accountant_confirm_user_name,0) != IFNULL(t2.accountant_confirm_user_name,0) or
		IFNULL(t1.accountant_confirm_date,0) != IFNULL(t2.accountant_confirm_date,0) or
		IFNULL(t1.derate_amount,0) != IFNULL(t2.derate_amount,0) or
		IFNULL(t1.remark,0) != IFNULL(t2.remark,0) or
		IFNULL(t1.create_time,0) != IFNULL(t2.create_time,0) or
		IFNULL(t1.create_user,0) != IFNULL(t2.create_user,0) or
		IFNULL(t1.update_time,0) != IFNULL(t2.update_time,0) or
		IFNULL(t1.update_user,0) != IFNULL(t2.update_user,0) or
		IFNULL(t1.current_sub_status,0) != IFNULL(t2.current_sub_status,0) or
		IFNULL(t1.repay_status,0) != IFNULL(t2.repay_status,0) or
		IFNULL(t1.src_type,0) != IFNULL(t2.src_type,0)
		)
  </update>
  
  <update id="updateBasicBusinessg">
  		UPDATE tb_repayment_biz_plan_list_synch t1,tb_basic_business t2 SET 
		t1.business_id_ext = t2.business_id,
		t1.district_id_ext = t2.district_id,
		t1.district_name_ext = t2.district_name,
		t1.company_id_ext = t2.company_id,
		t1.company_name_ext = t2.company_name,
		t1.operator_id_ext = t2.operator_id,
		t1.operator_name_ext = t2.operator_name,
		t1.customer_name_ext = t2.customer_name,
		t1.business_type_ext = t2.business_type,
		t1.business_type_ext = t2.business_type,
		t1.borrow_money_ext = t2.borrow_money,
		t1.repayment_type_id_ext = t2.repayment_type_id,
		t1.business_ctype_ext = t2.business_ctype
		WHERE 
		t1.original_business_id_ext = t2.business_id AND(
		IFNULL(t1.business_id_ext,0) != IFNULL(t2.business_id,0) OR
		IFNULL(t1.district_id_ext,0) != IFNULL(t2.district_id,0) OR
		IFNULL(t1.district_name_ext,0) != IFNULL(t2.district_name,0) OR
		IFNULL(t1.company_id_ext,0) != IFNULL(t2.company_id,0) OR
		IFNULL(t1.company_name_ext,0) != IFNULL(t2.company_name,0) OR
		IFNULL(t1.operator_id_ext,0) != IFNULL(t2.operator_id,0) OR
		IFNULL(t1.operator_name_ext,0) != IFNULL(t2.operator_name,0) OR
		IFNULL(t1.customer_name_ext,0) != IFNULL(t2.customer_name,0) OR
		IFNULL(t1.business_type_ext,0) != IFNULL(t2.business_type,0) OR
		IFNULL(t1.business_type_ext,0) != IFNULL(t2.business_type,0) OR
		IFNULL(t1.borrow_money_ext,0) != IFNULL(t2.borrow_money,0) OR
		IFNULL(t1.repayment_type_id_ext,0) != IFNULL(t2.repayment_type_id,0) OR
		IFNULL(t1.business_ctype_ext,0) != IFNULL(t2.business_ctype,0)
		)
  </update>
  
  <update id="updateCollectionStatus">
  		UPDATE tb_repayment_biz_plan_list_synch t1,tb_collection_status t2 SET 
		t1.phone_staff_ext = t2.phone_staff,
		t1.visit_staff_ext = t2.visit_staff,
		t1.collection_status_ext = t2.collection_status
		WHERE 
		t1.plan_list_id = t2.crp_id AND(
		IFNULL(t1.phone_staff_ext,0) != IFNULL(t2.phone_staff,0) OR
		IFNULL(t1.visit_staff_ext,0) != IFNULL(t2.visit_staff,0) OR
		IFNULL(t1.collection_status_ext,0) != IFNULL(t2.collection_status,0)
		)
  </update>
  
  <update id="updateRepaymentBizPlan">
  		UPDATE tb_repayment_biz_plan_list_synch t1,tb_repayment_biz_plan t2 SET 
		t1.plan_status_ext = t2.plan_status,
		t1.borrow_limit_ext = t2.borrow_limit,
		t1.is_defer_ext = t2.is_defer,
		t1.original_business_id_ext = t2.original_business_id
		WHERE 
		t1.plan_id = t2.plan_id AND(
		IFNULL(t1.plan_status_ext,0) != IFNULL(t2.plan_status,0) OR
		IFNULL(t1.borrow_limit_ext,0) != IFNULL(t2.borrow_limit,0) OR
		IFNULL(t1.is_defer_ext,0) != IFNULL(t2.is_defer,0) OR
		IFNULL(t1.original_business_id_ext,0) != IFNULL(t2.original_business_id,0)
		)
  </update>
  
  <update id="updateFiveLevelClassifyBusinessChangeLog">
  		UPDATE tb_repayment_biz_plan_list_synch t1,tb_five_level_classify_business_change_log t2 SET 
		t1.class_name_ext = t2.class_name
		WHERE 
		t1.business_id_ext = t2.orig_business_id 
		AND t2.valid_status ='1'
		AND(
		IFNULL(t1.class_name_ext,0) != IFNULL(t2.class_name,0) 
		)
  </update>
  
  <update id="updateBasicBusinessCustomer">
	  	UPDATE tb_repayment_biz_plan_list_synch t1,tb_basic_biz_customer t2 SET 
		t1.phone_number_ext = t2.phone_number,
		t1.identify_card_ext = t2.identify_card
		WHERE 
		t1.business_id_ext = t2.business_id 
		AND(
		IFNULL(t1.phone_number_ext,0) != IFNULL(t2.phone_number,0) OR
		IFNULL(t1.identify_card_ext,0) != IFNULL(t2.identify_card,0)
		)
  </update>

  <update id="updateRepaymentBizPlanListDetail">
  	UPDATE tb_repayment_biz_plan_list_synch t1,
	(select IFNULL(SUM(fact_amount), 0) as fact_amount, plan_list_id from tb_repayment_biz_plan_list_detail group by plan_list_id)
	 t2 SET 
	t1.fact_amount_ext = IFNULL(t2.fact_amount, 0)
	WHERE 
	t1.plan_list_id = t2.plan_list_id 
	AND(
	IFNULL(t1.fact_amount_ext,0) != IFNULL(t2.fact_amount, 0)
	)
  </update>
  
  <update id="updateTuandaiProjectInfo">
  	UPDATE tb_repayment_biz_plan_list_synch t1,tb_tuandai_project_info t2 SET 
	t1.real_name_ext = t2.real_name
	WHERE 
	t1.business_id_ext = t2.business_id 
	AND(
	IFNULL(t1.real_name_ext,0) != IFNULL(t2.real_name,0)
	)
  </update>
  
  <update id="updateBasicCompany">
  	UPDATE tb_repayment_biz_plan_list_synch t1,tb_basic_company t2 SET 
	t1.area_pid_ext = t2.area_pid,
	t1.area_id_ext = t2.area_id
	WHERE 
	t1.company_id_ext = t2.area_id 
	AND(
	IFNULL(t1.area_pid_ext,0) != IFNULL(t2.area_pid,0) OR
	IFNULL(t1.area_id_ext,0) != IFNULL(t2.area_id,0)
	)
  </update>
  
  <update id="updateMoneyPoolRepayment">
  	UPDATE tb_repayment_biz_plan_list_synch t1,tb_money_pool_repayment t2 SET 
	t1.plan_list_id = t2.plan_list_id
	WHERE 
	t1.plan_list_id = t2.plan_list_id 
	AND(
	IFNULL(t1.trade_date_ext,0) != IFNULL(t2.trade_date,0)
	)
  </update>
  
  <update id="updateBasicBusinessType">
	UPDATE tb_repayment_biz_plan_list_synch t1,tb_basic_business_type t2 SET 
	t1.business_type_name_ext = t2.business_type_name
	WHERE t1.business_type_ext = t2.business_type_id
	AND IFNULL(t1.business_type_name_ext,0) != IFNULL(t2.business_type_name,0)
  </update>
  
</mapper>
