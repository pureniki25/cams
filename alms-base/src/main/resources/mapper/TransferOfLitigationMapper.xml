<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hongte.alms.base.mapper.TransferOfLitigationMapper">
	
	<resultMap id="TransferOfLitigationMap" type="com.hongte.alms.base.vo.litigation.TransferOfLitigationVO" >  
	    	<result property="businessId" column="businessId"/> 
   			<result property="businessType" column="businessType"/>
   			<result property="businessTypeName" column="businessTypeName"/>
   			<result property="customerName" column="customerName"/>
   			<result property="customerType" column="customerType"/>
   			<result property="loanRate" column="loanRate"/>
   			<result property="customerIdentifyCard" column="customerIdentifyCard"/>
   			<result property="finalBorrowMoney" column="finalBorrowMoney"/>
   			<result property="borrowLimit" column="borrowLimit"/>
   			<result property="repaymentTypeId" column="repaymentTypeId"/>
   			<result property="repaymentPrincipa" column="repaymentPrincipa"/>
   			<result property="repaymentPeriods" column="repaymentPeriods"/>
   			<result property="totalPeriods" column="totalPeriods"/>
   			<result property="accountStatus" column="accountStatus"/>
   			<result property="sourceSystem" column="sourceSystem"/>
   			<result property="createUserId" column="create_user"/>
	    <association property="businessCompany" javaType="com.hongte.alms.base.vo.litigation.BusinessCompany">  
	    	<result property="deptId" column="deptId"/> 
   			<result property="deptName" column="deptName"/>
	    </association>
	    <association property="originalUser" javaType="com.hongte.alms.base.vo.litigation.BusinessUser">  
	    	<result property="userId" column="original_userid"/> 
   			<result property="name" column="original_name"/>
	    </association>
	    <collection property="paymentList" ofType="com.hongte.alms.base.vo.litigation.BusinessPayment">  
	    	<result property="businessId" column="businessId"/> 
   			<result property="businessAfterId" column="businessAfterId"/>
   			<result property="oddcorpus" column="surplus_principal"/>
	    </collection>
	</resultMap>  
	
	<resultMap id="HouseLoanMap" type="com.hongte.alms.base.vo.litigation.house.HouseLoanVO" >  
	    	<result property="businessId" column="business_id"/> 
   			<result property="customerName" column="customer_name"/>
   			<result property="phoneNumber" column="phone_number"/>
   			<result property="businessTypeName" column="business_type_name"/>
   			<result property="borrowMoney" column="borrow_money"/>
   			<result property="factOutputMoney" column="fact_output_money"/>
   			<result property="operatorName" column="operator_name"/>
   			<result property="originalName" column="original_name"/>
   			<result property="lastReviewUserName" column="last_review_user_name"/>
   			<result property="borrowRate" column="borrow_rate"/>
   			<result property="borrowLimit" column="borrow_limit"/>
   			<result property="notarizationType" column="notarization_type"/>
   			<result property="companyName" column="company_name"/>
	</resultMap>  

	<select id="queryCarLoanData" resultType="map">
		SELECT 
		  (SELECT 
		    IFNULL(
		      b.original_business_id,
		      a.business_id
		    ) 
		  FROM
		    tb_basic_business a 
		    LEFT JOIN tb_renewal_business b 
		      ON a.business_id = b.renewal_business_id 
		  WHERE a.business_id = t1.`business_id`) businessId,
		  t1.`customer_name` customerName,
		  IFNULL(t1.`borrow_money`, 0) borrowMoney,
		  t1.`output_platform_id` outputPlatformId,
		  t1.`borrow_limit` borrowLimit,
		  t1.`repayment_type_id` repaymentTypeId,
		  IFNULL(t1.`borrow_rate`, 0) borrowRate,
		  t1.`company_name` companyName,
		  CONCAT(t2.`brand_name`, t2.`model`) model,
		  t3.`create_time` createTime,
		  IFNULL(t3.`evaluation_amount`, 0) evaluationAmount,
		  (SELECT 
		    MAX(t4.`drag_date`) 
		  FROM
		    tb_car_drag t4 
		  WHERE t1.`business_id` = t4.`business_id`) dragDate,
		  t1.`operator_name` operatorName,
		  IFNULL(t5.fact_principal, 0) factPrincipal,
		  IFNULL(t5.fact_accrual, 0) factAccrual,
		  IFNULL(t5.surplus_principal, 0) surplusPrincipal,
		  IFNULL(t5.surplusServiceCharge, 0) surplusServiceCharge,
		  t5.fact_repay_date factRepayDate,
		  t5.due_date _dueDate,
		  t6.output_user_name outputUserName,
		  t6.fact_output_date factOutputDate,
		  (SELECT 
		    fact_output_money 
		  FROM
		    (SELECT 
		      a.business_id,
		      SUM(IFNULL(a.fact_output_money, 0)) fact_output_money 
		    FROM
		      tb_biz_output_record a 
		    WHERE a.withdraw_type IN (0, 1, 4) 
		    GROUP BY a.business_id) tab 
		  WHERE tab.business_id = t1.business_id) factOutputMoney 
		FROM
		  tb_basic_business t1,
		  tb_car_basic t2,
		  tb_car_detection t3,
		  (SELECT 
		    tab.fact_principal,
		    tab.fact_accrual,
		    tab.business_id,
		    tab.fact_repay_date,
		    tab.due_date,
		    (
		      tab.plan_principal - tab.fact_principal
		    ) surplus_principal,
		    (
		      tab.plan_service_charge - tab.fact_service_charge
		    ) surplusServiceCharge 
		  FROM
		    (SELECT 
		      tab2.`original_business_id` business_id,
		      MAX(tab1.fact_repay_date) fact_repay_date,
		      MIN(tab1.due_date) due_date,	-- 最小应还日期
		      SUM(
		        CASE
		          WHEN tab3.plan_item_type = 10 
		          THEN tab3.plan_amount 
		          ELSE 0 
		        END
		      ) `plan_principal`,
		      SUM(
		        CASE
		          WHEN tab3.plan_item_type = 10 
		          THEN tab3.fact_amount 
		          ELSE 0 
		        END
		      ) `fact_principal`,
		      SUM(
		        CASE
		          WHEN tab3.plan_item_type = 20 
		          THEN tab3.fact_amount 
		          ELSE 0 
		        END
		      ) `fact_accrual`,
		      SUM(
		        CASE
		          WHEN tab3.plan_item_type = 30 
		          THEN tab3.plan_amount 
		          ELSE 0 
		        END
		      ) `plan_service_charge`,
		      SUM(
		        CASE
		          WHEN tab3.plan_item_type = 30 
		          THEN tab3.fact_amount 
		          ELSE 0 
		        END
		      ) `fact_service_charge` 
		    FROM
		      `tb_repayment_biz_plan_list` tab1,
		      tb_repayment_biz_plan tab2,
		      tb_repayment_biz_plan_list_detail tab3 
		    WHERE tab1.`plan_id` = tab2.`plan_id` 
		      AND tab1.`plan_list_id` = tab3.`plan_list_id` 
		      AND tab2.`original_business_id` = #{businessId,jdbcType=VARCHAR}) tab) t5,
		  (SELECT 
		    MIN(fact_output_date) fact_output_date,
		    tab.output_user_name,
		    tab.business_id 
		  FROM
		    (SELECT 
		      tt1.business_id,
		      tt1.fact_output_date,
		      tt1.output_user_name 
		    FROM
		      tb_biz_output_record tt1 
		    WHERE IFNULL(tt1.withdraw_type, 0) = 0 
		      OR IFNULL(tt1.withdraw_type, 0) = 1) tab 
		  GROUP BY tab.business_id,
		    tab.output_user_name) t6 
		WHERE t1.`business_id` = t2.`business_id` 
		  AND t1.`business_id` = t3.`business_id` 
		  AND t1.`business_id` = t6.`business_id` 
		  AND t2.`last_detection_id` = t3.`id` 
		  AND t1.`business_id` = #{businessId,jdbcType=VARCHAR}	
	</select>
	
	<select id="queryTransferLitigationCarData" resultType="com.hongte.alms.base.vo.litigation.BusinessCar">
		SELECT 
		  cb.`business_id` carBusinessId,
		  cd.`annual_verification_expiration_date` annualDueDate,
		  cb.`color` carBodyColor,
		  cb.`brand_name` carBrand,
		  cd.`evaluation_amount` carEvaluateMoney,
		  cb.`model` carModelNumber,
		  cd.`traffic_violation_fee` carViolations,
		  cb.`vin` chassisNumber,
		  cb.`engine_model` engineNumber,
		  cb.`license_plate_number` licensePlateNumber,
		  cb.`owner_name` ownerName 
		FROM
		  tb_car_basic cb,
		  tb_car_detection cd 
		WHERE cd.`business_id` = cb.`business_id` 
		  AND cb.last_detection_id = cd.id
		  AND cb.`business_id` = #{businessId,jdbcType=VARCHAR}
	</select>
	
	<select id="queryTransferLitigationData" resultMap="TransferOfLitigationMap" >
			SELECT 
			  bb.`borrow_limit` borrowLimit,
			  bb.borrow_rate loanRate,
			  (SELECT 
			    IFNULL(
			      b.original_business_id,
			      a.business_id
			    ) 
			  FROM
			    tb_basic_business a 
			    LEFT JOIN tb_renewal_business b 
			      ON a.business_id = b.renewal_business_id 
			  WHERE a.business_id = bb.`business_id`) businessId,
			  (SELECT 
				  CASE
				    a.business_type 
				    WHEN 11 
				    THEN a.business_ctype 
				    ELSE b.xd_business_type_id 
				    END
				FROM
				  `tb_basic_business` a,
				  `tb_basic_business_type` b 
				WHERE a.`business_type` = b.`business_type_id` 
				  AND a.`business_id` = bb.`business_id`) businessType, -- 若type_id = 11 ，取子类型
			  (SELECT 
				  CASE
				    a.business_type 
				    WHEN 11 
				    THEN a.business_ctype 
				    ELSE b.business_type_name 
				    END businessType
				FROM
				  `tb_basic_business` a,
				  `tb_basic_business_type` b 
				WHERE a.`business_type` = b.`business_type_id`
				AND a.`business_id` = bb.`business_id`) businessTypeName,	-- 若type_id = 11 ，取子类型
			  bbc.`identify_card` customerIdentifyCard,
			  bbc.`customer_name` customerName,
			  CASE
			    bbc.customer_type 
			    WHEN '个人' 
			    THEN '0' 
			    WHEN '企业' 
			    THEN '1' 
			    ELSE '其他' 
			  END customerType,
			  bb.`borrow_money` finalBorrowMoney,
			  bb.`original_name`,
			  bb.create_user,
			  bb.original_userid,
			  bb.`repayment_type_id` repaymentTypeId,
			  1 sourceSystem,
			  bb.`company_id` deptId,
			  bb.`company_name` deptName,
			  bb.`business_id` carBusinessId,
			  (SELECT 
			    SUM(
			      CASE
			        c.plan_item_type 
			        WHEN 10 
			        THEN c.fact_amount 
			        ELSE 0 
			      END
			    ) `fact_principal` 
			  FROM
			    tb_repayment_biz_plan_list a,
			    tb_repayment_biz_plan b,
			    tb_repayment_biz_plan_list_detail c 
			  WHERE a.plan_id = b.plan_id 
			    AND a.plan_list_id = c.plan_list_id 
			    AND IFNULL(a.repay_flag, 0) != 6 
			    AND b.`original_business_id` = bb.business_id 
			  GROUP BY b.`original_business_id`) AS repaymentPrincipa,
			  cc.surplus_principal,
			  cc.businessAfterId,
			  (SELECT 
			    COUNT(1) 
			  FROM
			    tb_repayment_biz_plan_list lst,
			    tb_repayment_biz_plan p 
			  WHERE lst.`plan_id` = p.`plan_id` 
			    AND bb.`business_id` = p.original_business_id 
			    AND lst.current_status = '已还款') repaymentPeriods,
			  (SELECT 
			    COUNT(1) 
			  FROM
			    tb_repayment_biz_plan_list lst,
			    tb_repayment_biz_plan p 
			  WHERE lst.`plan_id` = p.`plan_id` 
			    AND bb.`business_id` = p.original_business_id) totalPeriods 
			FROM
			  tb_basic_business bb,
			  tb_basic_business_customer bbc,
			  (SELECT 
			    c.fact_principal,
			    b.`original_business_id`,
			    c.plan_list_id,
			    a.after_id businessAfterId,
			    (
			      c.plan_principal - c.fact_principal
			    ) surplus_principal 
			  FROM
			    tb_repayment_biz_plan_list a 
			    JOIN tb_repayment_biz_plan b 
			      ON a.plan_id = b.plan_id 
			    JOIN 
			      (SELECT 
			        t1.plan_list_id,
			        SUM(
			          CASE
			            WHEN t1.plan_item_type = 10 
			            THEN t1.fact_amount 
			            ELSE 0 
			          END
			        ) `fact_principal`,
			        SUM(
			          CASE
			            WHEN t1.plan_item_type = 10 
			            THEN t1.plan_amount 
			            ELSE 0 
			          END
			        ) `plan_principal` 
			      FROM
			        tb_repayment_biz_plan_list_detail t1 
			      GROUP BY t1.plan_list_id) c 
			      ON a.plan_list_id = c.plan_list_id 
			  WHERE IFNULL(a.repay_flag, 0) != 6 
			  ORDER BY a.due_date DESC) cc 
			WHERE bb.`business_id` = bbc.`business_id` 
			  AND bb.business_id = cc.original_business_id 
			  AND bbc.ismain_customer = 1 
		 	  AND bb.`business_id` = #{businessId,jdbcType=VARCHAR} 
	</select>
	
	<select id="queryLitigationBorrowerDetailed" resultType="com.hongte.alms.base.vo.litigation.LitigationBorrowerDetailed">
		SELECT 
		  a.business_id businessId,
		  -- 主借款人
		  a.real_name AS "name",
		  a.identity_card identifyCard,
		  CASE
		    a.`user_type_id` 
		    WHEN 1 
		    THEN 0
		    WHEN 2 
		    THEN 1
		    ELSE null 
		  END borrowerType,
		  1 AS "type" 
		FROM
		  tb_tuandai_project_info a 
		WHERE a.master_issue_id = a.project_id 
		  AND a.begin_time IS NOT NULL 
		  AND a.business_id = #{businessId,jdbcType=VARCHAR} 
		UNION
		ALL 
		SELECT 
		  a.business_id businessId,
		  -- `共借款人`
		  a.real_name AS "name",
		  a.identity_card identifyCard,
		  CASE
		    a.`user_type_id` 
		    WHEN 1 
		    THEN 0 
		    WHEN 2 
		    THEN 1 
		    ELSE null 
		  END borrowerType,
		  2 AS "type" 
		FROM
		  tb_tuandai_project_info a 
		WHERE a.master_issue_id != a.project_id 
		  AND a.begin_time IS NOT NULL 
		  AND a.business_id = #{businessId,jdbcType=VARCHAR}  
		UNION
		ALL 
		SELECT 
		  a.business_id businessId,
		  -- `抵押权人/反担保人`
		  a.pledee AS "name",
		  b.lender_identity identifyCard,
		  CASE
		    b.creditor_type 
		    WHEN 1 
		    THEN 0
		    WHEN 2 
		    THEN 1 
		    ELSE null 
		  END borrowerType,
		  3 AS "type" 
		FROM
		  tb_biz_output_contract a,
		  tb_creditor b 
		WHERE a.pledee_id = b.creditor_id 
		  AND a.business_id = #{businessId,jdbcType=VARCHAR}  
		UNION
		ALL 
		SELECT 
		  a.business_id businessId,
		  -- `担保主体/担保人`
		  a.guarantee_main AS "name",
		  b.identify_card identifyCard,
		  b.guarante_main_type borrowerType,
		  4 AS "type" 
		FROM
		  tb_fsd_non_standard_measure a,
		  tb_fsd_guarantee_information b 
		WHERE a.business_id = b.business_id 
		  AND b.operator_type = 1 
		  AND a.business_id = #{businessId,jdbcType=VARCHAR}  
		UNION
		ALL 
		SELECT 
		  a.business_id businessId,
		  -- `出借人`
		  a.lender AS "name",
		  b.lender_identity identifyCard,
		  CASE
		    b.creditor_type 
		    WHEN 1 
		    THEN 0 
		    WHEN 2 
		    THEN 1
		    ELSE null 
		  END borrowerType,
		  5 AS "type" 
		FROM
		  tb_biz_output_contract a,
		  tb_creditor b 
		WHERE a.lender_id = b.creditor_id 
		  AND a.business_id = #{businessId,jdbcType=VARCHAR}  
	</select>
	
	<select id="queryRepaymentPlanHouse" resultType="com.hongte.alms.base.vo.litigation.house.HousePlanInfo">
		SELECT 
		  (plan_principal - fact_principal) surplusPrincipal,
		  fact_principal factPrincipal,
		  DATEDIFF(SYSDATE(), fact_repay_date) overdueDays,
		  fact_repay_date dueDate 
		FROM
		  (SELECT 
		      b.plan_id,
		      b.`business_id`,
		      SUM(
		        CASE
		          WHEN c.plan_item_type = 10 
		          THEN plan_amount 
		          ELSE 0 
		        END
		      ) `plan_principal`,
		      SUM(
		        CASE
		          WHEN c.plan_item_type = 10 
		          THEN fact_amount 
		          ELSE 0 
		        END
		      ) `fact_principal`,
		      MAX(a.`fact_repay_date`) fact_repay_date
		    FROM
		      `tb_repayment_biz_plan_list` a,
		      `tb_repayment_biz_plan` b,
		      tb_repayment_biz_plan_list_detail c 
		  WHERE a.plan_list_id = c.plan_list_id 
		    AND a.plan_id = b.plan_id 
		    AND IFNULL(a.repay_flag, 0) != 6 
		  GROUP BY b.plan_id) tt
		WHERE tt.business_id = #{businessId,jdbcType=VARCHAR}
	</select>
	
	<select id="queryHouseLoanData" resultMap="HouseLoanMap">
		SELECT 
		  (SELECT 
		    IFNULL(
		      b.original_business_id,
		      a.business_id
		    ) 
		  FROM
		    tb_basic_business a 
		    LEFT JOIN tb_renewal_business b 
		      ON a.business_id = b.renewal_business_id 
		  WHERE a.business_id = bb.`business_id`) business_id,
		  bb.`customer_name`,
		  (SELECT 
		    a.phone_number 
		  FROM
		    tb_basic_business_customer a 
		  WHERE a.ismain_customer = 1 
		    AND a.business_id = bb.`business_id`) phone_number,
		  (SELECT 
		    a.business_type_name 
		  FROM
		    tb_basic_business_type a 
		  WHERE a.business_type_id = bb.`business_type`) business_type_name,
		  bb.`borrow_money`,
		  (SELECT 
		    fact_output_money 
		  FROM
		    (SELECT 
		      a.business_id,
		      SUM(IFNULL(a.fact_output_money, 0)) fact_output_money 
		    FROM
		      tb_biz_output_record a 
		    WHERE a.withdraw_type IN (0, 1, 4) 
		    GROUP BY a.business_id) tab 
		  WHERE tab.business_id = bb.business_id) fact_output_money,
		  bb.`operator_name`,
		  bb.`original_name`,
		  bba.`last_review_user_name`,
		  bb.`borrow_rate`,
		  bb.`borrow_limit`,
		  CASE
		    fsd.notarization_type 
		    WHEN '1' 
		    THEN '办理委托公证' 
		    WHEN '2' 
		    THEN '强制执行公证' 
		    WHEN '5' 
		    THEN '办理声明公证' 
		    WHEN '6' 
		    THEN '办理证件公证' 
		    WHEN '7' 
		    THEN '核实原公证书' 
		    ELSE '其他' 
		  END notarization_type,
		  bb.company_name
		FROM
		  tb_basic_business bb,
		  tb_basic_business_approve bba,
		  tb_fsd_non_standard_measure fsd
		WHERE bb.business_id = bba.business_id 
		  AND bb.business_id = fsd.business_id
		  AND bb.business_id = #{businessId,jdbcType=VARCHAR}
	</select>

	<select id="queryMortgageInfoByBusinessId" resultType="com.hongte.alms.base.vo.litigation.house.MortgageInfo">
		SELECT 
		  fh.house_address,
		  fh.house_name,
		  boc.lender,
		  boc.pledee,
		  '抵押债权' mortgageSecurities,
		  fh.house_area,
		  fh.house_price,
		  fh.house_total,
		  fh.house_pledged_bank,
		  fh.borrow_total,
		  fh.borrow_balance,
		  fh.second_mortgage_bank,
		  fh.second_mortgage_total,
		  fh.second_mortgage_balance,
		  fh.third_mortgage_bank,
		  fh.third_mortgage_total,
		  fh.third_mortgage_balance,
		  fh.fourth_mortgage_bank,
		  fh.fourth_mortgage_total,
		  fh.fourth_mortgage_balance 
		FROM
		  tb_fsd_house fh,
		  tb_biz_output_contract boc 
		WHERE fh.business_id = boc.`business_id` 
		AND fh.`business_id` = #{businessId,jdbcType=VARCHAR}
	</select>
	
	<select id="queryBusinessType" resultType="java.lang.Integer">
		SELECT bb.`business_type` FROM `tb_basic_business` bb, `tb_basic_business_type` bbt 
		WHERE bb.`business_type` = bbt.`business_type_id` AND bb.`business_id` = #{businessId,jdbcType=VARCHAR}
	</select>
	
	<select id="queryRepaymentTypeByBusinessId" resultType="java.lang.String">
		SELECT 
		  CASE
		    t.`repayment_type_id` 
		    WHEN 1 
		    THEN '到期还本息' 
		    WHEN 2 
		    THEN '每月付息到期还本' 
		    WHEN 4 
		    THEN '等本等息' 
		    WHEN 5 
		    THEN '等额本息' 
		    WHEN 9 
		    THEN '分期还本付息' 
		    ELSE '' 
		  END repaymentType
		FROM
		  tb_basic_business t 
		WHERE t.`business_id` = #{businessId,jdbcType=VARCHAR}
	</select>
	
	<select id="queryCarLoanFees" resultType="map">
		SELECT 
		  a.`due_date` dueDate,
		  -- 应还日期
		  a.`period` curPeriod,
		  -- 当前应还期数
		  c.plan_accrual planAccrual,
		  -- 当期应还利息
		  c.plan_service_charge planServiceCharge,
		  -- 本期应还服务费
		  c.plan_guarantee_charge planGuaranteeCharge,
		  -- 本期应还担保公司费用
		  c.plan_platform_charge planPlatformCharge,
		  -- 本期应还平台费
		  (SELECT 
		    CASE
		      WHEN SUM(`plan_amount`) > 0 
		      THEN 1 
		      ELSE 0 
		    END `是否服务费一次性收取的业务` 
		  FROM
		    (SELECT 
		      t3.`plan_amount` 
		    FROM
		      tb_repayment_biz_plan_list t1,
		      tb_repayment_biz_plan t2,
		      tb_repayment_biz_plan_list_detail t3 
		    WHERE t1.plan_id = t2.plan_id 
		      AND t1.plan_list_id = t3.plan_list_id 
		      AND t2.original_business_id = #{businessId,jdbcType=VARCHAR} 
		      AND IFNULL(t3.plan_item_type, 0) = 30 
		      AND IFNULL(t1.repay_flag, 0) != 6 
		      AND IFNULL(t1.`period`, 0) != 0) tab) isPreCharge, -- 是否服务费一次性收取的业务
		  (SELECT 
			  CASE
			    WHEN plan_amount > 0 
			    THEN 0 
			    ELSE 1 
			  END  
			FROM
			  (SELECT 
			    t3.`plan_amount` 
			  FROM
			    tb_repayment_biz_plan_list t1,
			    tb_repayment_biz_plan t2,
			    tb_repayment_biz_plan_list_detail t3 
			  WHERE t1.plan_id = t2.plan_id 
			    AND t1.plan_list_id = t3.plan_list_id 
			    AND t2.original_business_id = #{businessId,jdbcType=VARCHAR} 
			    AND IFNULL(t3.plan_item_type, 0) = 30 
			    AND IFNULL(t1.repay_flag, 0) != 6
			    GROUP BY t1.plan_list_id
			    ORDER BY t1.due_date DESC
			    LIMIT 1) tab) isPreServiceFees,	-- 是否服务费前置收取
		  (SELECT 
		    COUNT(1) 
		  FROM
		    `tb_repayment_biz_plan_list` 
		  WHERE business_id = b.original_business_id) totalPeriod
		  -- 总期数
		FROM
		  tb_repayment_biz_plan_list a,
		  tb_repayment_biz_plan b,
		  (SELECT 
		    t1.plan_list_id,
		    SUM(
		      CASE
		        WHEN t1.plan_item_type = 40 
		        THEN t1.plan_amount 
		        ELSE 0 
		      END
		    ) AS `plan_guarantee_charge`,
		    SUM(
		      CASE
		        WHEN t1.plan_item_type = 50 
		        THEN t1.plan_amount 
		        ELSE 0 
		      END
		    ) AS `plan_platform_charge`,
		    SUM(
		      CASE
		        WHEN t1.plan_item_type = 20 
		        THEN t1.plan_amount 
		        ELSE 0 
		      END
		    ) AS `plan_accrual`,
		    SUM(
		      CASE
		        WHEN t1.plan_item_type = 30 
		        THEN t1.plan_amount 
		        ELSE 0 
		      END
		    ) AS `plan_service_charge` 
		  FROM
		    tb_repayment_biz_plan_list_detail t1 
		  GROUP BY t1.plan_list_id) c
		WHERE a.plan_id = b.plan_id 
		  AND a.plan_list_id = c.plan_list_id
		  AND b.original_business_id = #{businessId,jdbcType=VARCHAR}
		  AND a.`due_date` <![CDATA[ >= ]]> #{billDate,jdbcType=DATE}
		  AND IFNULL(a.repay_flag, 0) != 6 
		ORDER BY a.due_date 
		LIMIT 1 
	</select>
	
	<select id="queryBalanceDueByBillDate" resultType="java.lang.Double">
		SELECT 	  
		  ifnull(SUM(t.plan_amount),0)
		FROM
		  tb_repayment_biz_plan_list_detail t,
		  tb_repayment_biz_plan_list t2,
		  tb_repayment_biz_plan t3 
		WHERE t.plan_list_id = t2.plan_list_id 
		  AND t2.plan_id = t3.plan_id 
		  AND t.`plan_item_type` IN (20,30,60) 
		  AND t2.`due_date` <![CDATA[ < ]]> #{billDate,jdbcType=DATE}
		  AND t3.original_business_id = #{businessId,jdbcType=VARCHAR}
	</select>
	
	<select id="queryMinNoRepaymentDueDateByBusinessId" resultType="java.util.Date">
		SELECT 
		    t2.`due_date` -- 状态为'逾期'的最早应还日期
		  FROM
		    tb_repayment_biz_plan t1,
		    tb_repayment_biz_plan_list t2 
		  WHERE t1.`plan_id` = t2.`plan_id` 
		    AND t1.`original_business_id` = #{businessId,jdbcType=VARCHAR}
		    AND t2.`current_status` = '逾期' 
		  ORDER BY t2.`due_date` 
		  LIMIT 1
	</select>
	
	<select id="queryPreviousFees" resultType="com.hongte.alms.base.vo.billing.PreviousFeesVO">
		SELECT 
		  tab.original_business_id businessId,
		  tab.period,
		  -- 期数
		  tab.current_status currentStatus,
		  -- 当期还款状态
		  (
		    tab.planAccrual - tab.factAccrual
		  ) AS previousPlanAccrual,
		  -- 往期少交利息
		  (
		    tab.planServiceCharge - tab.factServiceCharge
		  ) AS previousPlanServiceCharge,
		  --  往期 少交服务费
		  (tab.pateFees - tab.factLateFees) AS previousLateFees 
		  --  往期少交滞纳金
		FROM
		  (SELECT 
		    t2.`period`,
		    t2.current_status,
		    t3.original_business_id,
		    SUM(
		      CASE
		        WHEN t.plan_item_type = 20 
		        THEN t.plan_amount 
		        ELSE 0 
		      END
		    ) AS `planAccrual`,
		    -- 应交利息
		    SUM(
		      CASE
		        WHEN t.plan_item_type = 30 
		        THEN t.plan_amount 
		        ELSE 0 
		      END
		    ) AS `planServiceCharge`,
		    -- 应交服务费
		    SUM(
		      CASE
		        WHEN t.plan_item_type = 60 
		        THEN t.plan_amount 
		        ELSE 0 
		      END
		    ) AS `pateFees`,
		    -- 应交滞纳金
		    SUM(
		      CASE
		        WHEN t.plan_item_type = 20 
		        THEN t.fact_amount 
		        ELSE 0 
		      END
		    ) AS `factAccrual`,
		    -- 实交利息 
		    SUM(
		      CASE
		        WHEN t.plan_item_type = 30 
		        THEN t.fact_amount 
		        ELSE 0 
		      END
		    ) AS `factServiceCharge`,
		    -- 实缴服务费
		    SUM(
		      CASE
		        WHEN t.plan_item_type = 60 
		        THEN t.fact_amount 
		        ELSE 0 
		      END
		    ) AS `factLateFees` -- 实缴滞纳金
		  FROM
		    tb_repayment_biz_plan_list_detail t,
		    tb_repayment_biz_plan_list t2,
		    tb_repayment_biz_plan t3 
		  WHERE t.plan_list_id = t2.plan_list_id 
		    AND t2.plan_id = t3.plan_id 
		  AND t2.`due_date` <![CDATA[ < ]]> #{billDate,jdbcType=DATE}
		  AND t3.original_business_id = #{businessId,jdbcType=VARCHAR} 
		  AND IFNULL(t2.repay_flag, 0) != 6
		GROUP BY t.`plan_list_id`) tab
		ORDER BY tab.period
	</select>
	
	<select id="queryMatchingRepaymentPlanAccrualSurplusPrincipal" resultType="java.lang.Double">
		SELECT 
		  (
		    tt.plan_principal - tt.fact_principal
		  ) surplusPrincipal 
		FROM
		  (SELECT 
		    -- 应还本金总额
		    SUM(
		      CASE
		        WHEN detail.plan_item_type = 10 
		        THEN detail.plan_amount 
		        ELSE 0 
		      END
		    ) `plan_principal`,
		    -- 实还本金总额
		    SUM(
		      CASE
		        WHEN detail.plan_item_type = 10 
		        THEN detail.fact_amount 
		        ELSE 0 
		      END
		    ) `fact_principal` 
		  FROM
		    `tb_repayment_biz_plan_list` lst,
		    `tb_repayment_biz_plan_list_detail` detail,
		    (SELECT 
		      MIN(t2.`due_date`) min_due_date,
		      t1.`plan_id` 
		    FROM
		      `tb_repayment_biz_plan` t1,
		      `tb_repayment_biz_plan_list` t2,
		      `tb_repayment_biz_plan_list_detail` t3 
		    WHERE t1.`plan_id` = t2.`plan_id` 
		      AND t2.`plan_list_id` = t3.`plan_list_id` 
		      AND t2.`current_status` = '逾期' 
		      AND t1.`original_business_id` = #{businessId,jdbcType=VARCHAR}) tab 
		  WHERE lst.`due_date` <![CDATA[ <= ]]> tab.min_due_date 
		    AND lst.`plan_list_id` = detail.`plan_list_id` 
		    AND lst.`plan_id` = tab.plan_id) tt 
	</select>
	
	<select id="countOverdueByBusinessId" resultType="java.lang.Integer">
		SELECT 
		  COUNT(1)
		FROM
		  tb_repayment_biz_plan t1,
		  tb_repayment_biz_plan_list t2
		  WHERE t1.`plan_id` = t2.`plan_id`
		  AND t2.`current_status` = '逾期'
		  AND t1.`original_business_id` = #{businessId,jdbcType=VARCHAR} 
	</select>
	
	<select id="queryMaxDueDateByBusinessId" resultType="map">
		SELECT 
		  t2.`due_date` maxDueDate,
		  SUM(
		    CASE
		      WHEN t3.plan_item_type = 20 
		      THEN t3.plan_amount 
		      ELSE 0 
		    END
		  ) AS `planAccrual`,
		  SUM(
		    CASE
		      WHEN t3.plan_item_type = 30 
		      THEN t3.plan_amount 
		      ELSE 0 
		    END
		  ) AS `planServiceCharge`,
		  SUM(
		      CASE
		        WHEN t3.plan_item_type = 40 
		        THEN t3.plan_amount 
		        ELSE 0 
		      END
		    ) AS `plan_guarantee_charge`,
		    SUM(
		      CASE
		        WHEN t3.plan_item_type = 50 
		        THEN t3.plan_amount 
		        ELSE 0 
		      END
		    ) AS `plan_platform_charge`
		FROM
		  tb_repayment_biz_plan t1,
		  tb_repayment_biz_plan_list t2,
		  tb_repayment_biz_plan_list_detail t3
		WHERE t1.`original_business_id` = #{businessId,jdbcType=VARCHAR}  
		  AND t2.`plan_id` = t1.`plan_id` 
		  AND t2.`plan_list_id` = t3.`plan_list_id`
		GROUP BY t2.`plan_list_id` 
		ORDER BY t2.`due_date` DESC
		LIMIT 1
	</select>
	
	<select id="queryOverRepayMoneyByBusinessId" resultType="java.lang.Double">
		SELECT 
		  (
		    t1.over_repay_money_1 - t2.over_repay_money_0
		  ) over_repay_money 
		FROM
		  (SELECT 
		    t.business_id,
		    IFNULL(SUM(t.over_repay_money),0) over_repay_money_1 
		  FROM
		    `tb_accountant_over_repay_log` t 
		  WHERE t.freeze_status != 1 
		    AND t.money_type = 1
		    AND t.business_id = #{businessId,jdbcType=VARCHAR}) t1,
		  (SELECT 
		    t.business_id,
		    IFNULL(SUM(t.over_repay_money), 0) over_repay_money_0 
		  FROM
		    `tb_accountant_over_repay_log` t 
		  WHERE t.freeze_status != 1 
		    AND t.money_type = 0
		    AND t.business_id = #{businessId,jdbcType=VARCHAR}) t2   
	</select>
	
	<select id="queryRefundMoneyByBusinessId" resultType="java.lang.Double">
		SELECT 
		  IFNULL(SUM(t.refund_money),0) 
		FROM
		  `tb_refund_detail` t 
		WHERE t.business_id = #{businessId,jdbcType=VARCHAR} 
	</select>
</mapper>
