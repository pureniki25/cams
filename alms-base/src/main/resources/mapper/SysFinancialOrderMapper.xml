<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hongte.alms.base.mapper.SysFinancialOrderMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.hongte.alms.base.entity.SysFinancialOrder">
        <id column="id" property="id" />
        <result column="area_id" property="areaId" />
        <result column="company_id" property="companyId" />
        <result column="business_type_id" property="businessTypeId" />
        <result column="user_ids" property="userIds" />
        <result column="user_names" property="userNames" />
        <result column="update_user" property="updateUser" />
        <result column="update_time" property="updateTime" />
        <result column="create_user" property="createUser" />
        <result column="create_time" property="createTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, area_id AS areaId, company_id AS companyId, business_type_id AS businessTypeId, user_ids AS userIds, user_names AS userNames, update_user AS updateUser, update_time AS updateTime, create_user AS createUser, create_time AS createTime
    </sql>
    
    <select id="search" resultType="com.hongte.alms.base.vo.finance.SysFinancialOrderVO">
        select fo.id as id, fo.area_id as areaId, c.area_name as areaName, fo.company_id as companyId, c2.area_name as companyName,
                fo.business_type_id  as businessTypeId, bt.business_type_name as businessTypeName, fo.update_user as updateUser, fo.update_time as UpdateTime,
        fo.create_user as createUser, fo.create_time as createTime,
        fou.user_ids AS userIds, fou.user_names AS userNames
        from tb_sys_financial_order fo inner join tb_basic_business_type bt on fo.business_type_id = bt.business_type_id
        left join (
        select finance_order_id, group_concat(user_id order by user_id) as user_ids, group_concat(user_name order by
        user_name) as user_names
        from tb_sys_financial_order_user group by finance_order_id
        ) as fou on fo.id=fou.finance_order_id
        left join tb_basic_company c on c.area_id = fo.area_id
        left join tb_basic_company c2 on c2.area_id = fo.company_id
        <where>
            <if test="userName != null and ''!=userName">
                (fou.user_names like '%${userName}%' or fou.user_ids like '%${userName}%')
            </if>
            <if test="areaId != null and ''!=areaId">
                and fo.area_id = #{areaId}
            </if>
            <if test="companyId != null and ''!=companyId">
                and fo.company_id = #{companyId}
            </if>
            <if test="businessTypeId != null and ''!=businessTypeId">
                and fo.business_type_id = #{businessTypeId}
            </if>
        </where>
        order by areaName, companyName
    </select>

    <select id="search_bak" resultType="com.hongte.alms.base.vo.finance.SysFinancialOrderVO">
        select fo.id as id, fo.area_id as areaId, c.area_name as areaName, fo.company_id as companyId, c2.area_name as
        companyName,
        fo.business_type_id as businessTypeId, bt.business_type_name as businessTypeName, fo.update_user as updateUser,
        fo.update_time as UpdateTime,
        fo.create_user as createUser, fo.create_time as createTime, fo.user_ids as userIds, fo.user_names as userNames, fou.user_id as userId, fou.user_name as userName
        from tb_sys_financial_order fo inner join  tb_basic_business_type bt on fo.business_type_id = bt.business_type_id
        left join tb_sys_financial_order_user fou on  fo.id=fou.finance_order_id
        left join tb_basic_company c on c.area_id = fo.area_id
        left join tb_basic_company c2 on c2.area_id = fo.company_id
        <where>
            <if test="userName != null and ''!=userName">
                fou.user_name like concat('%',#{userName},'%')
            </if>
            <if test="areaId != null and ''!=areaId">
                and fo.area_id = #{areaId}
            </if>
            <if test="companyId != null and ''!=companyId">
                and fo.company_id = #{companyId}
            </if>
            <if test="businessTypeId != null and ''!=businessTypeId">
                and fo.business_type_id = #{businessTypeId}
            </if>
        </where>

    </select>

</mapper>
