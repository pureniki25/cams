<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hongte.alms.base.mapper.RepaymentBizPlanMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.hongte.alms.base.entity.RepaymentBizPlan">
        <id column="plan_id" property="planId" />
        <result column="business_id" property="businessId" />
        <result column="original_business_id" property="originalBusinessId" />
        <result column="repayment_batch_id" property="repaymentBatchId" />
        <result column="borrow_money" property="borrowMoney" />
        <result column="borrow_rate" property="borrowRate" />
        <result column="borrow_rate_unit" property="borrowRateUnit" />
        <result column="borrow_limit" property="borrowLimit" />
        <result column="borrow_limit_unit" property="borrowLimitUnit" />
        <result column="plan_status" property="planStatus" />
        <result column="is_defer" property="isDefer" />
        <result column="xd_after_guid" property="xdAfterGuid" />
        <result column="xd_out_id" property="xdOutId" />
        <result column="src_type" property="srcType" />
        <result column="create_time" property="createTime" />
        <result column="create_user" property="createUser" />
        <result column="update_time" property="updateTime" />
        <result column="update_user" property="updateUser" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        plan_id AS planId, business_id AS businessId, original_business_id AS originalBusinessId, repayment_batch_id AS repaymentBatchId, borrow_money AS borrowMoney, borrow_rate AS borrowRate, borrow_rate_unit AS borrowRateUnit, borrow_limit AS borrowLimit, borrow_limit_unit AS borrowLimitUnit, plan_status AS planStatus, is_defer AS isDefer, xd_after_guid AS xdAfterGuid, xd_out_id AS xdOutId, src_type AS srcType, create_time AS createTime, create_user AS createUser, update_time AS updateTime, update_user AS updateUser
    </sql>



	<select id="selectRepaymentOpenServiceList"
		resultType="com.hongte.alms.base.vo.module.RepaymentOpenServiceVO">



		select plan.plan_id as planId,pList.plan_list_id as
		planListId,pDetail.plan_detail_id as planDetailId,pDetail.fee_id as feeId
		from
		tb_repayment_biz_plan plan left join

		tb_repayment_biz_plan_list pList on plan.plan_id=pList.plan_id left join

		tb_repayment_biz_plan_list_detail pDetail on
		pDetail.plan_list_id=pList.plan_list_id

		<where>

			and user.user_id=#{userId}
			where plan.original_business_id=#{originalBusinessId} and
			pList.after_id=#{afterId}
		</where>




	</select>


    <select id="queryCustomerRepayPlan" resultType="com.hongte.alms.base.RepayPlan.vo.RepayingPlanDto">

      select
        biz.business_id as businessId,
        bizPlan.plan_status as planStatus,
        bizPlan.original_business_id as orgBusinessId,
        bType.business_type_name as businessType,
        biz.business_type as bizTypeId
      from tb_basic_business biz
      join tb_repayment_biz_plan bizPlan on biz.business_id = bizPlan.original_business_id
      left join tb_basic_business_type bType on biz.business_type= bType.business_type_id
        <where>
            biz.customer_identify_card = #{identifyCard}
        </where>


    </select>

	<select id="listRepaymentSettleListVOs" resultType="com.hongte.alms.base.vo.finance.RepaymentSettleListVO">
		SELECT
			if(pl.orig_business_id != pl.business_id,true,false) as isDefer
			pl.period as period,
			pl.after_id AS afterId,
			pl.due_date AS repayDate,
			( SELECT IFNULL( sum( plan_amount ), 0 ) FROM tb_repayment_biz_plan_list_detail WHERE plan_list_id = pl.plan_list_id AND plan_item_type = 10 ) AS item10,
			( SELECT IFNULL( sum( plan_amount ), 0 ) FROM tb_repayment_biz_plan_list_detail WHERE plan_list_id = pl.plan_list_id AND plan_item_type = 20 ) AS item20,
			( SELECT IFNULL( sum( plan_amount ), 0 ) FROM tb_repayment_biz_plan_list_detail WHERE plan_list_id = pl.plan_list_id AND plan_item_type = 30 ) AS item30,
			( SELECT IFNULL( sum( plan_amount ), 0 ) FROM tb_repayment_biz_plan_list_detail WHERE plan_list_id = pl.plan_list_id AND plan_item_type = 50 ) AS item50,
			( SELECT IFNULL( sum( plan_amount ), 0 ) FROM tb_repayment_biz_plan_list_detail WHERE plan_list_id = pl.plan_list_id AND fee_id = '3131c075-5721-11e8-8a00-0242ac110002' ) AS offlineOverDue,
			( SELECT IFNULL( sum( plan_amount ), 0 ) FROM tb_repayment_biz_plan_list_detail WHERE plan_list_id = pl.plan_list_id AND fee_id = '2e646c87-5721-11e8-8a00-0242ac110002' ) AS onlineOverDue,
			pl.total_borrow_amount AS planAmount,
			( SELECT IFNULL( sum( fact_amount ), 0 ) FROM tb_repayment_biz_plan_list_detail WHERE plan_list_id = pl.plan_list_id ) AS factAmount 
		FROM
			tb_repayment_biz_plan p LEFT JOIN 
			tb_repayment_biz_plan_list pl ON  pl.plan_id = p.plan_id
		WHERE
			p.original_business_id = #{businessId} 
			<if test="planId != null">
			AND	p.plan_id = #{planId}
			</if>
		ORDER BY
			pl.after_id
	</select>


	<!-- 获取业务维度贷款余额（非源业务编号） -->
	<select id="queryLoanBalanceByBusinessId" resultType="java.math.BigDecimal">
		SELECT 
		  SUM(
		    CASE
		      t2.`plan_item_type` 
		      WHEN 10 
		      THEN IFNULL(t2.`fact_amount`, 0) 
		      ELSE 0 
		    END
		  ) factAmount 
		FROM
		  `tb_repayment_biz_plan_list_detail` t2 
		WHERE
		   t2.business_id = #{businessId,jdbcType=VARCHAR} 
		GROUP BY t2.`business_id`
	</select>
</mapper>
